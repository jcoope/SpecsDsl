/**
 * generated by Xtext 2.21.0
 */
package com.example.specs.specsDsl.impl;

import com.example.specs.specsDsl.Cores;
import com.example.specs.specsDsl.SpecsDslPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Cores</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.example.specs.specsDsl.impl.CoresImpl#getCores <em>Cores</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CoresImpl extends MinimalEObjectImpl.Container implements Cores
{
  /**
   * The default value of the '{@link #getCores() <em>Cores</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCores()
   * @generated
   * @ordered
   */
  protected static final int CORES_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCores() <em>Cores</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCores()
   * @generated
   * @ordered
   */
  protected int cores = CORES_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CoresImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SpecsDslPackage.Literals.CORES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCores()
  {
    return cores;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCores(int newCores)
  {
    int oldCores = cores;
    cores = newCores;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpecsDslPackage.CORES__CORES, oldCores, cores));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SpecsDslPackage.CORES__CORES:
        return getCores();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SpecsDslPackage.CORES__CORES:
        setCores((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SpecsDslPackage.CORES__CORES:
        setCores(CORES_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SpecsDslPackage.CORES__CORES:
        return cores != CORES_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (cores: ");
    result.append(cores);
    result.append(')');
    return result.toString();
  }

} //CoresImpl
