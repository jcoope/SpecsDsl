/**
 * generated by Xtext 2.21.0
 */
package com.example.specs.specsDsl.impl;

import com.example.specs.specsDsl.ClockSpeed;
import com.example.specs.specsDsl.SpecsDslPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Clock Speed</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.example.specs.specsDsl.impl.ClockSpeedImpl#getClockSpeed <em>Clock Speed</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ClockSpeedImpl extends MinimalEObjectImpl.Container implements ClockSpeed
{
  /**
   * The default value of the '{@link #getClockSpeed() <em>Clock Speed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClockSpeed()
   * @generated
   * @ordered
   */
  protected static final float CLOCK_SPEED_EDEFAULT = 0.0F;

  /**
   * The cached value of the '{@link #getClockSpeed() <em>Clock Speed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClockSpeed()
   * @generated
   * @ordered
   */
  protected float clockSpeed = CLOCK_SPEED_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ClockSpeedImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SpecsDslPackage.Literals.CLOCK_SPEED;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public float getClockSpeed()
  {
    return clockSpeed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClockSpeed(float newClockSpeed)
  {
    float oldClockSpeed = clockSpeed;
    clockSpeed = newClockSpeed;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpecsDslPackage.CLOCK_SPEED__CLOCK_SPEED, oldClockSpeed, clockSpeed));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SpecsDslPackage.CLOCK_SPEED__CLOCK_SPEED:
        return getClockSpeed();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SpecsDslPackage.CLOCK_SPEED__CLOCK_SPEED:
        setClockSpeed((Float)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SpecsDslPackage.CLOCK_SPEED__CLOCK_SPEED:
        setClockSpeed(CLOCK_SPEED_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SpecsDslPackage.CLOCK_SPEED__CLOCK_SPEED:
        return clockSpeed != CLOCK_SPEED_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (clockSpeed: ");
    result.append(clockSpeed);
    result.append(')');
    return result.toString();
  }

} //ClockSpeedImpl
