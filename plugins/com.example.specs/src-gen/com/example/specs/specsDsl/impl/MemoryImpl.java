/**
 * generated by Xtext 2.21.0
 */
package com.example.specs.specsDsl.impl;

import com.example.specs.specsDsl.Capacity;
import com.example.specs.specsDsl.Memory;
import com.example.specs.specsDsl.SpecsDslPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Memory</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.example.specs.specsDsl.impl.MemoryImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.example.specs.specsDsl.impl.MemoryImpl#getCapacity <em>Capacity</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MemoryImpl extends MinimalEObjectImpl.Container implements Memory
{
  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected com.example.library.Memory name;

  /**
   * The cached value of the '{@link #getCapacity() <em>Capacity</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCapacity()
   * @generated
   * @ordered
   */
  protected Capacity capacity;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MemoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SpecsDslPackage.Literals.MEMORY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public com.example.library.Memory getName()
  {
    if (name != null && name.eIsProxy())
    {
      InternalEObject oldName = (InternalEObject)name;
      name = (com.example.library.Memory)eResolveProxy(oldName);
      if (name != oldName)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SpecsDslPackage.MEMORY__NAME, oldName, name));
      }
    }
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.example.library.Memory basicGetName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(com.example.library.Memory newName)
  {
    com.example.library.Memory oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpecsDslPackage.MEMORY__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Capacity getCapacity()
  {
    return capacity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCapacity(Capacity newCapacity, NotificationChain msgs)
  {
    Capacity oldCapacity = capacity;
    capacity = newCapacity;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SpecsDslPackage.MEMORY__CAPACITY, oldCapacity, newCapacity);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCapacity(Capacity newCapacity)
  {
    if (newCapacity != capacity)
    {
      NotificationChain msgs = null;
      if (capacity != null)
        msgs = ((InternalEObject)capacity).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SpecsDslPackage.MEMORY__CAPACITY, null, msgs);
      if (newCapacity != null)
        msgs = ((InternalEObject)newCapacity).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SpecsDslPackage.MEMORY__CAPACITY, null, msgs);
      msgs = basicSetCapacity(newCapacity, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpecsDslPackage.MEMORY__CAPACITY, newCapacity, newCapacity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SpecsDslPackage.MEMORY__CAPACITY:
        return basicSetCapacity(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SpecsDslPackage.MEMORY__NAME:
        if (resolve) return getName();
        return basicGetName();
      case SpecsDslPackage.MEMORY__CAPACITY:
        return getCapacity();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SpecsDslPackage.MEMORY__NAME:
        setName((com.example.library.Memory)newValue);
        return;
      case SpecsDslPackage.MEMORY__CAPACITY:
        setCapacity((Capacity)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SpecsDslPackage.MEMORY__NAME:
        setName((com.example.library.Memory)null);
        return;
      case SpecsDslPackage.MEMORY__CAPACITY:
        setCapacity((Capacity)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SpecsDslPackage.MEMORY__NAME:
        return name != null;
      case SpecsDslPackage.MEMORY__CAPACITY:
        return capacity != null;
    }
    return super.eIsSet(featureID);
  }

} //MemoryImpl
