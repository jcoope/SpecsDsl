/**
 * generated by Xtext 2.21.0
 */
package com.example.specs.specsDsl.impl;

import com.example.specs.specsDsl.ClockSpeed;
import com.example.specs.specsDsl.Cores;
import com.example.specs.specsDsl.Processor;
import com.example.specs.specsDsl.SpecsDslPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Processor</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.example.specs.specsDsl.impl.ProcessorImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.example.specs.specsDsl.impl.ProcessorImpl#getClockSpeed <em>Clock Speed</em>}</li>
 *   <li>{@link com.example.specs.specsDsl.impl.ProcessorImpl#getCores <em>Cores</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProcessorImpl extends MinimalEObjectImpl.Container implements Processor
{
  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected com.example.library.Processor name;

  /**
   * The cached value of the '{@link #getClockSpeed() <em>Clock Speed</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClockSpeed()
   * @generated
   * @ordered
   */
  protected ClockSpeed clockSpeed;

  /**
   * The cached value of the '{@link #getCores() <em>Cores</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCores()
   * @generated
   * @ordered
   */
  protected Cores cores;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProcessorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SpecsDslPackage.Literals.PROCESSOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public com.example.library.Processor getName()
  {
    if (name != null && name.eIsProxy())
    {
      InternalEObject oldName = (InternalEObject)name;
      name = (com.example.library.Processor)eResolveProxy(oldName);
      if (name != oldName)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SpecsDslPackage.PROCESSOR__NAME, oldName, name));
      }
    }
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.example.library.Processor basicGetName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(com.example.library.Processor newName)
  {
    com.example.library.Processor oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpecsDslPackage.PROCESSOR__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ClockSpeed getClockSpeed()
  {
    return clockSpeed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetClockSpeed(ClockSpeed newClockSpeed, NotificationChain msgs)
  {
    ClockSpeed oldClockSpeed = clockSpeed;
    clockSpeed = newClockSpeed;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SpecsDslPackage.PROCESSOR__CLOCK_SPEED, oldClockSpeed, newClockSpeed);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClockSpeed(ClockSpeed newClockSpeed)
  {
    if (newClockSpeed != clockSpeed)
    {
      NotificationChain msgs = null;
      if (clockSpeed != null)
        msgs = ((InternalEObject)clockSpeed).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SpecsDslPackage.PROCESSOR__CLOCK_SPEED, null, msgs);
      if (newClockSpeed != null)
        msgs = ((InternalEObject)newClockSpeed).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SpecsDslPackage.PROCESSOR__CLOCK_SPEED, null, msgs);
      msgs = basicSetClockSpeed(newClockSpeed, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpecsDslPackage.PROCESSOR__CLOCK_SPEED, newClockSpeed, newClockSpeed));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Cores getCores()
  {
    return cores;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCores(Cores newCores, NotificationChain msgs)
  {
    Cores oldCores = cores;
    cores = newCores;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SpecsDslPackage.PROCESSOR__CORES, oldCores, newCores);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCores(Cores newCores)
  {
    if (newCores != cores)
    {
      NotificationChain msgs = null;
      if (cores != null)
        msgs = ((InternalEObject)cores).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SpecsDslPackage.PROCESSOR__CORES, null, msgs);
      if (newCores != null)
        msgs = ((InternalEObject)newCores).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SpecsDslPackage.PROCESSOR__CORES, null, msgs);
      msgs = basicSetCores(newCores, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpecsDslPackage.PROCESSOR__CORES, newCores, newCores));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SpecsDslPackage.PROCESSOR__CLOCK_SPEED:
        return basicSetClockSpeed(null, msgs);
      case SpecsDslPackage.PROCESSOR__CORES:
        return basicSetCores(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SpecsDslPackage.PROCESSOR__NAME:
        if (resolve) return getName();
        return basicGetName();
      case SpecsDslPackage.PROCESSOR__CLOCK_SPEED:
        return getClockSpeed();
      case SpecsDslPackage.PROCESSOR__CORES:
        return getCores();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SpecsDslPackage.PROCESSOR__NAME:
        setName((com.example.library.Processor)newValue);
        return;
      case SpecsDslPackage.PROCESSOR__CLOCK_SPEED:
        setClockSpeed((ClockSpeed)newValue);
        return;
      case SpecsDslPackage.PROCESSOR__CORES:
        setCores((Cores)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SpecsDslPackage.PROCESSOR__NAME:
        setName((com.example.library.Processor)null);
        return;
      case SpecsDslPackage.PROCESSOR__CLOCK_SPEED:
        setClockSpeed((ClockSpeed)null);
        return;
      case SpecsDslPackage.PROCESSOR__CORES:
        setCores((Cores)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SpecsDslPackage.PROCESSOR__NAME:
        return name != null;
      case SpecsDslPackage.PROCESSOR__CLOCK_SPEED:
        return clockSpeed != null;
      case SpecsDslPackage.PROCESSOR__CORES:
        return cores != null;
    }
    return super.eIsSet(featureID);
  }

} //ProcessorImpl
